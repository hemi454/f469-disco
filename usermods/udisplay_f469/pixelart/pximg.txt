STATIC const mp_rom_map_elem_t pximg_locals_dict_table[] = {\n    { MP_ROM_QSTR(MP_QSTR_buf_alloc), MP_ROM_PTR(&mp_lv_img_buf_alloc_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_get_px_color), MP_ROM_PTR(&mp_lv_img_buf_get_px_color_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_get_px_alpha), MP_ROM_PTR(&mp_lv_img_buf_get_px_alpha_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_set_px_color), MP_ROM_PTR(&mp_lv_img_buf_set_px_color_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_set_px_alpha), MP_ROM_PTR(&mp_lv_img_buf_set_px_alpha_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_set_palette), MP_ROM_PTR(&mp_lv_img_buf_set_palette_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_free), MP_ROM_PTR(&mp_lv_img_buf_free_obj) },\n    { MP_ROM_QSTR(MP_QSTR_buf_get_img_size), MP_ROM_PTR(&mp_lv_img_buf_get_img_size_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_get_info), MP_ROM_PTR(&mp_lv_img_decoder_get_info_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_open), MP_ROM_PTR(&mp_lv_img_decoder_open_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_read_line), MP_ROM_PTR(&mp_lv_img_decoder_read_line_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_close), MP_ROM_PTR(&mp_lv_img_decoder_close_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_create), MP_ROM_PTR(&mp_lv_img_decoder_create_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_delete), MP_ROM_PTR(&mp_lv_img_decoder_delete_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_set_info_cb), MP_ROM_PTR(&mp_lv_img_decoder_set_info_cb_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_set_open_cb), MP_ROM_PTR(&mp_lv_img_decoder_set_open_cb_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_set_read_line_cb), MP_ROM_PTR(&mp_lv_img_decoder_set_read_line_cb_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_set_close_cb), MP_ROM_PTR(&mp_lv_img_decoder_set_close_cb_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_built_in_info), MP_ROM_PTR(&mp_lv_img_decoder_built_in_info_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_built_in_open), MP_ROM_PTR(&mp_lv_img_decoder_built_in_open_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_built_in_read_line), MP_ROM_PTR(&mp_lv_img_decoder_built_in_read_line_obj) },\n    { MP_ROM_QSTR(MP_QSTR_decoder_built_in_close), MP_ROM_PTR(&mp_lv_img_decoder_built_in_close_obj) },\n    { MP_ROM_QSTR(MP_QSTR_src_get_type), MP_ROM_PTR(&mp_lv_img_src_get_type_obj) },\n    { MP_ROM_QSTR(MP_QSTR_cf_get_px_size), MP_ROM_PTR(&mp_lv_img_cf_get_px_size_obj) },\n    { MP_ROM_QSTR(MP_QSTR_cf_is_chroma_keyed), MP_ROM_PTR(&mp_lv_img_cf_is_chroma_keyed_obj) },\n    { MP_ROM_QSTR(MP_QSTR_cf_has_alpha), MP_ROM_PTR(&mp_lv_img_cf_has_alpha_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_src), MP_ROM_PTR(&mp_lv_img_set_src_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_auto_size), MP_ROM_PTR(&mp_lv_img_set_auto_size_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_offset_x), MP_ROM_PTR(&mp_lv_img_set_offset_x_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_offset_y), MP_ROM_PTR(&mp_lv_img_set_offset_y_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_pivot), MP_ROM_PTR(&mp_lv_img_set_pivot_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_angle), MP_ROM_PTR(&mp_lv_img_set_angle_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_zoom), MP_ROM_PTR(&mp_lv_img_set_zoom_obj) },\n    { MP_ROM_QSTR(MP_QSTR_set_antialias), MP_ROM_PTR(&mp_lv_img_set_antialias_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_src), MP_ROM_PTR(&mp_lv_img_get_src_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_file_name), MP_ROM_PTR(&mp_lv_img_get_file_name_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_auto_size), MP_ROM_PTR(&mp_lv_img_get_auto_size_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_offset_x), MP_ROM_PTR(&mp_lv_img_get_offset_x_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_offset_y), MP_ROM_PTR(&mp_lv_img_get_offset_y_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_angle), MP_ROM_PTR(&mp_lv_img_get_angle_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_pivot), MP_ROM_PTR(&mp_lv_img_get_pivot_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_zoom), MP_ROM_PTR(&mp_lv_img_get_zoom_obj) },\n    { MP_ROM_QSTR(MP_QSTR_get_antialias), MP_ROM_PTR(&mp_lv_img_get_antialias_obj) },\n    { MP_ROM_QSTR(MP_QSTR_cache_set_size), MP_ROM_PTR(&mp_lv_img_cache_set_size_obj) },\n    { MP_ROM_QSTR(MP_QSTR_cache_invalidate_src), MP_ROM_PTR(&mp_lv_img_cache_invalidate_src_obj) },\n    { MP_ROM_QSTR(MP_QSTR_CF), MP_ROM_PTR(&mp_LV_IMG_CF_type) },\n    { MP_ROM_QSTR(MP_QSTR_SRC), MP_ROM_PTR(&mp_LV_IMG_SRC_type) },\n    { MP_ROM_QSTR(MP_QSTR_PART), MP_ROM_PTR(&mp_LV_IMG_PART_type) }\n};\n\nSTATIC MP_DEFINE_CONST_DICT(pximg_locals_dict, pximg_locals_dict_table);\n\nSTATIC void pximg_print(const mp_print_t *print,\n    mp_obj_t self_in,\n    mp_print_kind_t kind)\n{\n    mp_printf(print, "px img");\n}\n\nSTATIC mp_obj_t pximg_make_new(\n    const mp_obj_type_t *type,\n    size_t n_args,\n    size_t n_kw,\n    const mp_obj_t *args)\n{\n    return make_new(&px_img_create, type, n_args, n_kw, args);           \n}\n\nSTATIC const mp_obj_type_t mp_pximg_type = {\n    { &mp_type_type },\n    .name = MP_QSTR_pximg,\n    .print = pximg_print,\n    .make_new = pximg_make_new,\n    .attr = call_parent_methods,\n    .locals_dict = (mp_obj_dict_t*)&pximg_locals_dict,\n    .buffer_p = { .get_buffer = mp_lv_obj_get_buffer },\n    .parent = &mp_obj_type,\n};\n